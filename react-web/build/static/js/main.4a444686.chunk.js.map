{"version":3,"sources":["utils/session.js","components/login.component.js","utils/publicRoute.js","utils/privateRoute.js","components/conductItem.component.js","components/status.component.js","pages/status.page.js","pages/myAccount.page.js","components/conductList.component.js","pages/conducts.page.js","pages/conduct.page.js","pages/conductSettings.page.js","components/pluginItem.component.js","components/pluginList.component.js","pages/plugins.page.js","pages/plugin.page.js","pages/modelEditor.page.js","pages/codify.page.js","components/topbar.component.js","App.js","index.js"],"names":["isActiveSession","sessionStorage","getItem","getSessionCSRF","removeSession","Cookies","remove","setItem","removeItem","setSession","CSRF","Logout","props","requestOptions","method","mode","configData","cosMode","credentials","fetch","url","uri","history","useHistory","setTimeout","push","className","Login","state","username","password","otpRequired","otp","failedLogin","submit","bind","change","event","preventDefault","this","setState","body","JSON","stringify","then","response","ok","catch","error","console","log","json","target","value","name","type","checked","hobbies","splice","onSubmit","placeholder","autoComplete","onChange","Component","PublicRoute","component","rest","render","PrivateRoute","PollAuth","to","pathname","from","location","ConductItem","str","d","Date","setUTCSeconds","lastUpdateTime","href","id","title","length","substring","toLocaleString","onClick","e","deleteConductClickHandler","StatusItem","now","enabled","startCheck","maxDuration","StatusList","triggers","map","c","_id","apiTriggerStatusRefresh","Status","updateTriggers","MyAccount","password1","password2","updated","updateFailed","msg","loading","data","disabled","ConductList","conducts","filter","conduct","toLowerCase","includes","Conducts","DeleteConduct","NewConduct","window","confirm","Conduct","search","conductID","URLSearchParams","get","test","src","ConductSettings","status","comment","updateStatus","edit","PluginItem","PluginList","plugins","plugin","Plugins","Plugin","pluginName","ModelEditor","Codify","Topbar","class","exact","activeClassName","path","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4a444686.chunk.js","sourcesContent":["import { Cookies } from 'react-cookie';\r\n\r\n// return if the session is active\r\nexport const isActiveSession = () => {\r\n  return sessionStorage.getItem('active') || true;\r\n}\r\n\r\n// return session CSRF\r\nexport const getSessionCSRF = () => {\r\n  return sessionStorage.getItem('CSRF') || null;\r\n}\r\n  \r\n// remove the session storage\r\nexport const removeSession = () => {\r\n  const cookies = new Cookies();\r\n  cookies.remove(\"jimiAuth\");\r\n  sessionStorage.setItem('active', false);\r\n  sessionStorage.removeItem('CSRF');\r\n}\r\n  \r\n// set the token and user from the session storage\r\nexport const setSession = (CSRF) => {\r\n  sessionStorage.setItem('active', true);\r\n  sessionStorage.setItem('CSRF', CSRF);\r\n}","import React, { Component } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport configData from \"./../config/config.json\";\r\n\r\nimport { setSession, removeSession } from './../utils/session';\r\n\r\nimport \"./html.component.css\"\r\nimport \"./login.component.css\"\r\n\r\nexport function PollAuth(props) {\r\n    const history = useHistory();\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n        mode: configData.cosMode\r\n    };\r\n    fetch(configData.url+configData.uri+'auth/poll/', requestOptions).then(response => {\r\n        if (response.ok) {\r\n            return response.json();\r\n        }\r\n        throw response;\r\n    }).then(response => {\r\n        setSession(response[\"CSRF\"]);\r\n    }).catch(error => {\r\n        removeSession();\r\n        history.push('/login');\r\n    });\r\n}\r\n\r\nexport function Logout(props) {   \r\n    const requestOptions = {\r\n        method: 'GET',\r\n        mode: configData.cosMode,\r\n        credentials: 'include'\r\n    };\r\n    fetch(configData.url+configData.uri+'auth/logout/', requestOptions);\r\n    removeSession();\r\n    const history = useHistory()\r\n    setTimeout(() => { history.push('/login'); }, 2500);\r\n    return (\r\n        <div className=\"fullscreen\">\r\n            <h1>jimi</h1>\r\n            <div className=\"outer\">\r\n                <div className=\"inner\">\r\n                    <h3>Successfully logged out</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: null,\r\n            password: null,\r\n            otpRequired: false,\r\n            otp: null,\r\n            failedLogin: false\r\n        }\r\n        this.submit = this.submit.bind(this);\r\n        this.change = this.change.bind(this);\r\n    }\r\n\r\n    submit(event) {\r\n        event.preventDefault();\r\n        this.setState({ failedLogin: false });\r\n\r\n        if (!this.state.otpRequired) {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                mode: configData.cosMode,\r\n                body: JSON.stringify({ username: this.state.username, password: this.state.password })\r\n            };\r\n            fetch(configData.url+configData.uri+'auth/', requestOptions).then(response => {\r\n                if (response.ok) {\r\n                    console.log(response);\r\n                    return response.json();\r\n                }\r\n                throw response;\r\n            }).then(response => {\r\n                setSession(response[\"CSRF\"]);\r\n                this.props.history.push('/'); \r\n            }).catch(error => { \r\n                this.setState({ otpRequired: true });\r\n            });\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                mode: configData.cosMode,\r\n                body: JSON.stringify({ username: this.state.username, password: this.state.password, otp: this.state.otp })\r\n            };\r\n            fetch(configData.url+configData.uri+'auth/', requestOptions).then(response => {\r\n                if (response.ok) return response;\r\n                throw response;\r\n            }).then(response => {\r\n                this.props.history.push('/index'); \r\n            }).catch(error => { \r\n                this.setState({ otpRequired: false });\r\n                this.setState({ failedLogin: true });\r\n            });\r\n        }\r\n    }\r\n\r\n    change(event) {\r\n        const target = event.target;\r\n        var value = target.value;\r\n        const name = target.name;\r\n        if (target.type === 'checkbox') {\r\n            if (target.checked) {\r\n                this.state.hobbies[value] = value;   \r\n            } else {\r\n                this.state.hobbies.splice(value, 1);\r\n            }\r\n        } else {\r\n            this.setState({ [name]: value });\r\n        }   \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"fullscreen\">\r\n                <h1>jimi</h1>\r\n                <div className=\"outer\">\r\n                    <div className={`inner ${!this.state.failedLogin ? \"\" : \"shake\"}`}>\r\n                        <form onSubmit={this.submit}>\r\n                            <h3>Login</h3>\r\n                            {this.state.failedLogin ? <p className=\"failedLoginAlert\"><b>Login details appear to be invalid!</b></p> : <p className=\"failedLoginAlert\"><b>&#160;</b></p> }\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" name=\"username\" className=\"form-control textbox\" placeholder=\"Username\" autoComplete=\"off\" onChange={this.change} />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" name=\"password\" className=\"form-control textbox\" placeholder=\"password\" autoComplete=\"off\" onChange={this.change} />\r\n                            </div>\r\n\r\n                            {this.state.otpRequired &&\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"otp\" className=\"form-control textbox\" placeholder=\"One Time Password\" autoComplete=\"off\" onChange={this.change} />\r\n                                </div>\r\n                            }\r\n\r\n                            <button type=\"submit\" className=\"btn btn-primary btn-block button\">Login</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { PollAuth } from './../components/login.component'\r\n\r\nimport { isActiveSession } from './../utils/session';\r\n \r\n// handle the public routes\r\nfunction PublicRoute({ component: Component, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => <Component {...props} /> }\r\n    />\r\n  )\r\n}\r\n \r\nexport default PublicRoute;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { PollAuth } from './../components/login.component'\r\n\r\nimport { isActiveSession } from './../utils/session';\r\n\r\n// handle the private routes\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n  PollAuth();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => isActiveSession() ? <Component {...props} /> : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />}\r\n    />\r\n  )\r\n}\r\n \r\nexport default PrivateRoute;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./html.component.css\"\r\nimport \"./conductItem.component.css\"\r\n\r\nfunction truncate(str) {\r\n    return str.length > 30 ? str.substring(0, 30) + \"...\" : str;\r\n}\r\n\r\nfunction ConductItem(props) {\r\n    var d = new Date(0);\r\n    d.setUTCSeconds(props.lastUpdateTime)\r\n    return (\r\n        <div className=\"conductItemContainer\">\r\n            <div className=\"conductItem\">\r\n                <a className=\"conductTitle\" href={\"/conduct/?conductID=\"+props.id} title={props.name.length > 30 ? props.name : \"\"}>\r\n                    {truncate(props.name)}\r\n                </a>\r\n                <div className=\"conductRight\">\r\n                    <p className=\"conductLastEdit\">\r\n                        Last Edit: {d.toLocaleString()}\r\n                    </p>\r\n                    <a className=\"conductDeleteLink\" onClick={(e) => props.deleteConductClickHandler(e,props.id,props.name)}>\r\n                        Delete\r\n                    </a>\r\n                    <p className=\"conductRightOptions\">\r\n                        /\r\n                    </p>\r\n                    <a className=\"conductEditLink\" href={\"/conductSettings/?conductID=\" + props.id + \"&edit=True\"}>\r\n                        Edit\r\n                    </a>\r\n                </div>\r\n                <p className=\"conductState\">\r\n                    State: {props.state}\r\n                </p>\r\n            </div>       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConductItem;","import React, { Component } from \"react\";\r\nimport ConductItem from \"./conductItem.component\"\r\n\r\nimport \"./html.component.css\"\r\nimport \"./status.component.css\"\r\n\r\nfunction StatusItem(props) {\r\n    const now = Date.now();\r\n    return (\r\n        <div className=\"statusItemContainer\">\r\n            <div className={`statusItem ${props.enabled ? \"statusItemEnabled\" : \"\"} ${props.startCheck > 0 ? \"statusItemRunning\" : \"\"} ${props.enabled && props.startCheck > 0 && props.startCheck + props.maxDuration < now  ? \"statusItemCrashed\" : \"\"} `} title={props.name}>\r\n            </div>       \r\n        </div>\r\n    )\r\n}\r\n\r\nfunction StatusList(props) {\r\n    return (\r\n        <div>\r\n            {props.triggers.map(c => <StatusItem key={c._id} name={c.name} enabled={c.enabled} startCheck={c.startCheck} maxDuration={c.maxDuration} />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatusList;","import React, { Component } from \"react\";\r\n\r\nimport configData from \"./../config/config.json\";\r\n\r\nimport StatusList from \"./../components/status.component\"\r\n\r\nimport \"./status.page.css\"\r\n\r\nfunction apiTriggerStatusRefresh() {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n        mode: configData.cosMode\r\n    };\r\n    var triggers = fetch(configData.url+configData.uri+'models/trigger/all/', requestOptions).then(response => {\r\n        if (response.ok) {\r\n            return response.json()\r\n        }\r\n    }).then(json => {\r\n        return json[\"results\"];\r\n    });\r\n    return triggers\r\n}\r\n\r\nexport default class Status extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            triggers : []\r\n        }\r\n\r\n        this.updateTriggers = this.updateTriggers.bind(this);\r\n\r\n        apiTriggerStatusRefresh().then(triggers => {\r\n            this.setState({ triggers : triggers });\r\n            this.updateTriggers();\r\n        })\r\n    }\r\n\r\n    updateTriggers() {\r\n        setTimeout(() => {\r\n            apiTriggerStatusRefresh().then(triggers => {\r\n                this.setState({ triggers : triggers });\r\n                this.updateTriggers();\r\n            })\r\n        }, 1000 );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"pageContent1\">\r\n                <h1>Trigger Status:</h1>\r\n                <br/>\r\n                <StatusList triggers={this.state.triggers} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport { getSessionCSRF } from './../utils/session';\r\n\r\nimport configData from \"./../config/config.json\";\r\n\r\nimport \"./../components/html.component.css\"\r\nimport \"./myAccount.page.css\"\r\n\r\nexport default class MyAccount extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: null,\r\n            name: null,\r\n            password: \"\",\r\n            password1: \"\",\r\n            password2: \"\",\r\n            updated: false,\r\n            updateFailed: false,\r\n            msg: \"\",\r\n            loading: true\r\n        }\r\n        this.change = this.change.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n            mode: configData.cosMode\r\n        };\r\n        fetch(configData.url+configData.uri+'auth/myAccount/', requestOptions).then(response => {\r\n            if (response.ok) {\r\n                return response.json()\r\n            }\r\n        }).then(json => {\r\n            this.setState({ \"username\" : json[\"username\"], \"name\" : json[\"name\"], \"loading\" : false })\r\n        });\r\n    }\r\n\r\n    submit(event) {\r\n        event.preventDefault();\r\n        if (this.state.password1 !== this.state.password2) {\r\n            this.setState({ msg: \"Passwords do not match\" })\r\n            this.setState({ updateFailed: true });\r\n            setTimeout(() => { this.setState({ updateFailed: false }) }, 1000);\r\n            return\r\n        }\r\n        var data = { CSRF: getSessionCSRF(), name: this.state.name }\r\n        if (this.state.password1 !== \"\")\r\n        {\r\n            data[\"password\"] = this.state.password\r\n            data[\"password1\"] = this.state.password1\r\n        }\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            mode: configData.cosMode,\r\n            body: JSON.stringify(data)\r\n        };\r\n        fetch(configData.url+configData.uri+'auth/myAccount/', requestOptions).then(response => {\r\n            if (response.ok) return response;\r\n            throw response;\r\n        }).then(response => {\r\n            this.setState({ msg: \"Saved\" })\r\n            this.setState({ updated: true })\r\n            setTimeout(() => { this.setState({ updated: false }) }, 1000);\r\n        }).catch(error => { \r\n            this.setState({ msg: \"Error: Could not save data\" })\r\n            this.setState({ updateFailed: true });\r\n        });\r\n    }\r\n\r\n    change(event) {\r\n        this.setState({ updateFailed: false, msg: \"\" });\r\n        const target = event.target;\r\n        var value = target.value;\r\n        const name = target.name;\r\n        if (target.type === 'checkbox') {\r\n            if (target.checked) {\r\n                this.state.hobbies[value] = value;   \r\n            } else {\r\n                this.state.hobbies.splice(value, 1);\r\n            }\r\n        } else {\r\n            this.setState({ [name]: value });\r\n        }   \r\n    }\r\n\r\n    render() {\r\n        return !this.state.loading ? (\r\n            <div className=\"pageContent1\">\r\n                <form onSubmit={this.submit}>\r\n                    <h3>Your Details</h3>\r\n                    <br/><br/>\r\n                    <div className=\"form-group\">\r\n                        General Details\r\n                        <hr/>\r\n                    </div>                    \r\n                    <div className=\"form-group\">\r\n                        Username:\r\n                        <input type=\"text\" name=\"username\" className=\"form-control textbox\" autoComplete=\"off\" value={this.state.username} disabled=\"true\" onChange={this.change} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        Name:\r\n                        <input type=\"text\" name=\"name\" className=\"form-control textbox\" autoComplete=\"off\" value={this.state.name} onChange={this.change} />\r\n                    </div>\r\n                    <br/>\r\n\r\n                    <div className=\"form-group\">\r\n                        Change Password\r\n                        <hr/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        Current Password:\r\n                        <input type=\"password\" name=\"password\" className=\"form-control textbox\" autoComplete=\"off\" onChange={this.change} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        New Password:\r\n                        <input type=\"password\" name=\"password1\" className={`form-control textbox ${this.state.msg == \"Passwords do not match\" ? \"alertErrorBorder\" : \"\"}`} autoComplete=\"off\" onChange={this.change} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        Confirm New Password:\r\n                        <input type=\"password\" name=\"password2\" className={`form-control textbox ${this.state.msg == \"Passwords do not match\" ? \"alertErrorBorder\" : \"\"}`} autoComplete=\"off\" onChange={this.change} />\r\n                    </div>\r\n\r\n                    <br/>\r\n                    <button type=\"submit\" className={`btn btn-primary btn-block button small ${!this.state.updated ? \"\" : \"saved\"} ${!this.state.updateFailed ? \"\" : \"error\"}`}>Update</button>\r\n                    <p className={`resultMessage ${!this.state.updateFailed ? \"alert\" : \"alertError\"} ${!this.state.updated && !this.state.updateFailed ? \"hide\" : \"\"}`}><b>{this.state.msg}</b></p>\r\n                </form>\r\n            </div>\r\n        ) : <span>Loading page...</span>\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport ConductItem from \"./conductItem.component\"\r\n\r\nimport \"./html.component.css\"\r\nimport \"./conductList.component.css\"\r\n\r\nfunction ConductList(props) {\r\n    return (\r\n        <div>\r\n            {props.conducts.filter(conduct => conduct.name.toLowerCase().includes(props.filter.toLowerCase())).map(c => <ConductItem key={c._id} id={c._id} name={c.name} lastUpdateTime={c.lastUpdateTime} state={c.enabled ? \"Enabled\" : \"Disabled\"} deleteConductClickHandler={props.deleteConductClickHandler} />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConductList;","import React, { Component } from \"react\";\r\n\r\nimport configData from \"./../config/config.json\";\r\n\r\nimport ConductList from \"./../components/conductList.component\"\r\n\r\nimport \"./conducts.page.css\"\r\n\r\nexport default class Conducts extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            conducts: [],\r\n            filter: \"\"\r\n        }\r\n\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n            mode: configData.cosMode\r\n        };\r\n        fetch(configData.url+configData.uri+'conducts/', requestOptions).then(response => {\r\n            if (response.ok) {\r\n                return response.json()\r\n            }\r\n        }).then(json => {\r\n            this.setState({ conducts : json[\"results\"] });\r\n        });\r\n\r\n        this.change = this.change.bind(this);\r\n        this.DeleteConduct = this.DeleteConduct.bind(this);\r\n        this.NewConduct = this.NewConduct.bind(this);\r\n    }\r\n\r\n    NewConduct() {\r\n        this.props.history.push('/conductSettings/');\r\n    }\r\n\r\n    DeleteConduct(e,id,name) {\r\n        if (window.confirm(\"Please confirm removal of conduct named \"+name)) {\r\n            const requestOptions = {\r\n                method: 'DELETE',\r\n                credentials: 'include',\r\n                mode: configData.cosMode\r\n            };\r\n            fetch(configData.url+configData.uri + 'models/conduct/' + id + \"/\", requestOptions).then(response => {\r\n                if (response.ok) {\r\n                    this.setState({ conducts: this.state.conducts.filter(conduct => conduct._id !== id) });\r\n                }\r\n                throw response;\r\n            }).catch(error => {\r\n                console.log(\"Could not delete conduct: \" + id)\r\n            });\r\n        }\r\n    }\r\n\r\n    change(event) {\r\n        const target = event.target;\r\n        var value = target.value;\r\n        const name = target.name;\r\n        if (target.type === 'checkbox') {\r\n            if (target.checked) {\r\n                this.state.hobbies[value] = value;   \r\n            } else {\r\n                this.state.hobbies.splice(value, 1);\r\n            }\r\n        } else {\r\n            this.setState({ [name]: value });\r\n        }   \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"pageContent1\">\r\n                <div>\r\n                    <input type=\"text\" name=\"filter\" className=\"form-control textbox conductSearch\" placeholder=\"Search conducts\" onChange={this.change} />\r\n                    <button className=\"btn btn-primary btn-block button conductNew\" onClick={this.NewConduct}>+ Create New</button>\r\n                </div>\r\n                <br/>\r\n                <div>\r\n                    <ConductList conducts={this.state.conducts} filter={this.state.filter} deleteConductClickHandler={this.DeleteConduct} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\nimport configData from \"./../config/config.json\";\r\n\r\nimport \"./conduct.page.css\"\r\n\r\nexport default class Conduct extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            location : \"\"\r\n        }\r\n\r\n        const search = props.location.search;\r\n        const conductID = new URLSearchParams(search).get('conductID');\r\n        if (/^[A-Za-z0-9]+$/.test(conductID)) {\r\n            this.state.location = conductID;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"pageContent0\">\r\n                <iframe className=\"conductFrame\" src={configData.url+\"conductEditor/?conductID=\"+this.state.location}></iframe>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\nimport { getSessionCSRF } from './../utils/session';\r\n\r\nimport configData from \"./../config/config.json\";\r\n\r\nimport \"./../components/html.component.css\"\r\nimport \"./conductSettings.page.css\"\r\n\r\nexport default class ConductSettings extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            type: \"New\",\r\n            name: \"\",\r\n            status: false,\r\n            comment: \"\",\r\n            loading: true,\r\n            updateStatus: { \"id\" : null, \"msg\" : \"\" } \r\n        }\r\n        this.change = this.change.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n\r\n        const search = props.location.search;\r\n        const conductID = new URLSearchParams(search).get('conductID');\r\n        const edit = new URLSearchParams(search).get('edit');\r\n        if (edit === \"True\") {\r\n            const requestOptions = {\r\n                method: 'GET',\r\n                credentials: 'include',\r\n                mode: configData.cosMode\r\n            };\r\n            fetch(configData.url+configData.uri+'models/conduct/'+conductID+\"/\", requestOptions).then(response => {\r\n                if (response.ok) {\r\n                    return response.json()\r\n                }\r\n            }).then(json => {\r\n                this.setState({ \"name\" : json[\"name\"], \"status\" : json[\"status\"], \"comment\" : json[\"comment\"], \"type\" : \"Update\", \"loading\" : false })\r\n            });\r\n        } else {\r\n            this.state[\"loading\"] = false;\r\n        }\r\n    }\r\n\r\n    submit(event) {\r\n        event.preventDefault();\r\n        const search = this.props.location.search;\r\n        const conductID = new URLSearchParams(search).get('conductID');\r\n        const edit = new URLSearchParams(search).get('edit');\r\n        var data = { CSRF: getSessionCSRF(), name: this.state.name, comment: this.state.comment, enabled: this.state.enabled }\r\n        if (edit === \"True\") {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                credentials: 'include',\r\n                mode: configData.cosMode,\r\n                body: JSON.stringify(data)\r\n            };\r\n            fetch(configData.url+configData.uri+'models/conduct/'+conductID+\"/\", requestOptions).then(response => {\r\n                if (response.ok) return response;\r\n                throw response;\r\n            }).then(response => {\r\n                \r\n            }).catch(error => { \r\n                \r\n            });\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'PUT',\r\n                credentials: 'include',\r\n                mode: configData.cosMode\r\n            };\r\n            fetch(configData.url+configData.uri+'models/conduct/', requestOptions).then(response => {\r\n                if (response.ok) return response.json();\r\n                throw response;\r\n            }).then(response => {\r\n                // put returns an ID number that can then be used to push the data within the form to - this is a two step process\r\n                requestOptions[\"method\"] = \"POST\"\r\n                requestOptions[\"body\"] = JSON.stringify(data)\r\n                fetch(configData.url+configData.uri+'models/conduct/'+response[\"_id\"]+\"/\", requestOptions).then(response => {\r\n                    if (response.ok) return response;\r\n                    throw response;\r\n                }).then(response => {\r\n                    \r\n                }).catch(error => { \r\n                    \r\n                });\r\n            }).catch(error => { \r\n                \r\n            });\r\n        }\r\n    }\r\n\r\n    change(event) {\r\n        this.setState({ updateFailed: false, msg: \"\" });\r\n        const target = event.target;\r\n        var value = target.value;\r\n        const name = target.name;\r\n        if (target.type === 'checkbox') {\r\n            if (target.checked) {\r\n                this.state.hobbies[value] = value;   \r\n            } else {\r\n                this.state.hobbies.splice(value, 1);\r\n            }\r\n        } else {\r\n            this.setState({ [name]: value });\r\n        }   \r\n    }\r\n\r\n    render() {\r\n        return !this.state.loading ? (\r\n            <div className=\"pageContent1\">\r\n                <form onSubmit={this.submit}>\r\n                    <h3>Conduct Details</h3>\r\n                    <br/><br/>\r\n                    <div className=\"form-group\">\r\n                        General Details\r\n                        <hr/>\r\n                    </div>                    \r\n                    <div className=\"form-group\">\r\n                        Name:\r\n                        <input type=\"text\" name=\"name\" className=\"form-control textbox\" autoComplete=\"off\" value={this.state.name} onChange={this.change} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        Comment:\r\n                        <input type=\"text\" name=\"comment\" className=\"form-control textbox\" autoComplete=\"off\" value={this.state.comment} onChange={this.change} />\r\n                    </div>\r\n                    <br/>\r\n\r\n                    <br/>\r\n                    <button type=\"submit\" className=\"btn btn-primary btn-block button small\">{this.state.type}</button>\r\n                </form>\r\n            </div>\r\n        ) : <span>Loading page...</span>\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./html.component.css\"\r\nimport \"./pluginItem.component.css\"\r\n\r\nfunction PluginItem(props) {\r\n    return (\r\n        <div className=\"pluginItemContainer\">\r\n            <a className=\"pluginLink\" href={\"plugin/?pluginName=\"+props.name}>\r\n                <div className=\"pluginItem\">\r\n                    <span className=\"pluginTitle\">{props.name}</span>\r\n                </div>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nPluginItem.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired\r\n};\r\n\r\nexport default PluginItem;","import React, { Component } from \"react\";\r\nimport PluginItem from \"./pluginItem.component\"\r\n\r\nimport \"./html.component.css\"\r\nimport \"./pluginList.component.css\"\r\n\r\nfunction PluginList(props) {\r\n    return (\r\n        <div>\r\n            {props.plugins.filter( plugin => plugin.name.toLowerCase().includes(props.filter.toLowerCase())).map( c=> <PluginItem key={c._id} name={c.name} />) }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PluginList;","import React, { Component } from \"react\";\r\n\r\nimport configData from \"./../config/config.json\";\r\n\r\nimport PluginList from \"./../components/pluginList.component\"\r\n\r\nimport \"./plugins.page.css\"\r\n\r\nexport default class Plugins extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            plugins : [],\r\n            filter: \"\"\r\n        }\r\n\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n            mode: configData.cosMode\r\n        };\r\n        fetch(configData.url+configData.uri+'plugins/', requestOptions).then(response => {\r\n            if (response.ok) {\r\n                return response.json()\r\n            }\r\n        }).then(json => {\r\n            this.setState({ plugins : json[\"results\"] });\r\n        });\r\n\r\n        this.change = this.change.bind(this);\r\n    }\r\n\r\n    change(event) {\r\n        const target = event.target;\r\n        var value = target.value;\r\n        const name = target.name;\r\n        if (target.type === 'checkbox') {\r\n\r\n        } else {\r\n            this.setState({ [name]: value });\r\n        }   \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"pageContent1\">\r\n                <div>\r\n                    <input type=\"text\" name=\"filter\" className=\"form-control textbox pluginSearch\" placeholder=\"Search Plugins\" onChange={this.change} />\r\n                </div>\r\n                <br/>\r\n                <div>\r\n                    <PluginList plugins={this.state.plugins} filter={this.state.filter} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\nimport configData from \"./../config/config.json\";\r\n\r\nimport \"./plugin.page.css\"\r\n\r\nexport default class Plugin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            location : \"\"\r\n        }\r\n\r\n        const search = props.location.search;\r\n        const pluginName = new URLSearchParams(search).get('pluginName');\r\n        if (/^[A-Za-z]+$/.test(pluginName)) {\r\n            this.state.location = pluginName;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"pageContent0\">\r\n                <iframe className=\"pluginFrame\" src={configData.url+\"plugin/\"+this.state.location+\"/\"}></iframe>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\nimport configData from \"../config/config.json\";\r\n\r\nimport \"./modelEditor.page.css\"\r\n\r\nexport default class ModelEditor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"pageContent0\">\r\n                <iframe className=\"modelEditorFrame\" src={configData.url+\"model/\"}></iframe>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\nimport configData from \"../config/config.json\";\r\n\r\nimport \"./codify.page.css\"\r\n\r\nexport default class Codify extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"pageContent0\">\r\n                <iframe className=\"codifyFrame\" src={configData.url+\"codify/\"}></iframe>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route, NavLink } from 'react-router-dom';\r\n\r\nimport { isActiveSession } from './../utils/session';\r\n\r\nimport PublicRoute from './../utils/publicRoute';\r\nimport PrivateRoute from './../utils/privateRoute';\r\nimport {Login, Logout} from './login.component';\r\n\r\nimport Status from '../pages/status.page';\r\nimport MyAccount from '../pages/myAccount.page'; \r\nimport Conducts from '../pages/conducts.page'; \r\nimport Conduct from '../pages/conduct.page'; \r\nimport ConductSettings from '../pages/conductSettings.page'; \r\nimport Plugins from '../pages/plugins.page'; \r\nimport Plugin from '../pages/plugin.page'; \r\nimport ModelEditor from '../pages/modelEditor.page'; \r\nimport Codify from '../pages/codify.page'; \r\n\r\n\r\n\r\nimport './topbar.component.css'\r\n\r\nfunction Topbar(props) {   \r\n    return (\r\n        <BrowserRouter>\r\n            <div class=\"container\" id=\"topbar\">\r\n                <NavLink exact className=\"home\" activeClassName=\"homeActive\" to=\"/\">jimi</NavLink>\r\n                <NavLink exact className=\"link\" activeClassName=\"active\" to=\"/status\">Status</NavLink>\r\n                <NavLink exact className=\"link\" activeClassName=\"active\" to=\"/conducts\">Conducts</NavLink>\r\n                <NavLink exact className=\"link\" activeClassName=\"active\" to=\"/plugins\">Plugins</NavLink>\r\n                <NavLink exact className=\"link\" activeClassName=\"active\" to=\"/codify\">Codify</NavLink>\r\n                <NavLink exact className=\"link\" activeClassName=\"active\" to=\"/modelEditor\">Model Editor</NavLink>\r\n                <div class=\"container\" id=\"topbar-right\">\r\n                    { isActiveSession ? <NavLink exact className=\"link linkRight\" activeClassName=\"active\" to=\"/logout\">Logout</NavLink> : null }\r\n                    { isActiveSession ? <NavLink exact className=\"link linkRight\" activeClassName=\"active\" to=\"/myAccount\">My Account</NavLink> : null }\r\n                    { isActiveSession ? <NavLink exact className=\"link linkRight\" activeClassName=\"active\" to=\"/administration\">Administration</NavLink> : null }\r\n                </div>\r\n            </div>\r\n            <Switch>\r\n                <PublicRoute path=\"/login\" component={Login} />\r\n                <PrivateRoute path=\"/logout\" component={Logout} />\r\n                <PrivateRoute path=\"/status\" component={Status} />\r\n                <PrivateRoute path=\"/conducts\" component={Conducts} />\r\n                <PrivateRoute path=\"/conduct\" component={Conduct} />\r\n                <PrivateRoute path=\"/conductSettings\" component={ConductSettings} />\r\n                <PrivateRoute path=\"/plugins\" component={Plugins} />\r\n                <PrivateRoute path=\"/plugin\" component={Plugin} />\r\n                <PrivateRoute path=\"/codify\" component={Codify} />\r\n                <PrivateRoute path=\"/modelEditor\" component={ModelEditor} />\r\n                <PrivateRoute path=\"/myAccount\" component={MyAccount} />\r\n                <PrivateRoute path=\"/administration\" component={Status} />\r\n                <PrivateRoute path=\"/\" component={Status} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n  }\r\n  export default Topbar;","import React from 'react';\r\nimport {Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport Topbar from './components/topbar.component';\r\nimport Tab from './components/tab.component';\r\n \r\nimport './app.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div id=\"pageContent-wrapper\">\r\n      <Topbar />\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './default.css';\r\n\r\nimport App from './App';\r\n \r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}